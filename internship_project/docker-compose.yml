services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile-Backend
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
      - mongo
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: ../Dockerfile-Frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_BASE_URL = ${REACT_APP_API_BASE_URL}
    networks:
      - app-network

  postgres:
    build:
      context: .
      dockerfile: Dockerfile-PostgreSQL
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - app-network

  redis:
    build:
      context: .
      dockerfile: Dockerfile-Redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  mongo:
    build:
      context: .
      dockerfile: Dockerfile-MongoDB
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

volumes:
  postgres_data:
  mongo_data:

networks:
  app-network:
    driver: bridge